[gd_scene load_steps=3 format=3 uid="uid://be1jk3hg2vxnh"]

[ext_resource type="ArrayMesh" uid="uid://cpehijpj3f0hc" path="res://experimental/generate_mesh/rigged_helpers.res" id="1_dlcco"]

[sub_resource type="GDScript" id="GDScript_kdu0g"]
script/source = "extends Node3D

var surface_arrays
var bone_count
var b2g_index
var data = {}

# Called when the node enters the scene tree for the first time.
func _ready():
	data.bones = []
	data.weights = []
	
	surface_arrays = $RiggedHelpers.mesh.surface_get_arrays(0)
	bone_count = surface_arrays[Mesh.ARRAY_BONES].size() / surface_arrays[Mesh.ARRAY_VERTEX].size()
	b2g_index = Utils.create_unique_index(surface_arrays[Mesh.ARRAY_VERTEX])
	#print(bone_count)
	for i in b2g_index.size():
		var g_index = b2g_index[i][0]
		var local_bones = surface_arrays[Mesh.ARRAY_BONES].slice(g_index*bone_count,(g_index+1)*bone_count)
		var local_weights = surface_arrays[Mesh.ARRAY_WEIGHTS].slice(g_index*bone_count,(g_index+1)*bone_count)
		data.bones.append(local_bones)
		data.weights.append(local_weights)
	Utils.save_json(\"res://experimental/build_skeleton/bone_weights.json\",data)


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
"

[node name="Load_Bone_Weights" type="Node3D"]
script = SubResource("GDScript_kdu0g")

[node name="RiggedHelpers" type="MeshInstance3D" parent="."]
mesh = ExtResource("1_dlcco")
