[gd_scene load_steps=2 format=3 uid="uid://cenv3ym2vailr"]

[sub_resource type="GDScript" id="GDScript_5kh8w"]
script/source = "extends Node3D

var mixamo_bone_weights :Dictionary = load_bone_weights()
var mixamo_skeleton :Skeleton3D = load(\"res://experimental/build_skeleton/mixamo_basis_skeleton.tscn\").instantiate()
 
# Called when the node enters the scene tree for the first time.
func _ready():
	#print(mixamo_bone_weights)	
	var output = {bones=[],weights=[]}
	for bone_name in mixamo_bone_weights:
		var bone_id = mixamo_skeleton.find_bone(bone_name)
		for vertex_weight_pair in mixamo_bone_weights[bone_name]:
			var mh_id = vertex_weight_pair[0]
			var weight = vertex_weight_pair[1]
			if output.bones.size() <= mh_id:
				output.bones.resize(mh_id+1)
				output.weights.resize(mh_id+1)
			if output.bones[mh_id] == null:
				output.bones[mh_id] = []
				output.weights[mh_id] = []
			output.bones[mh_id].append(bone_id)
			output.weights[mh_id].append(weight)
	#for mh_id in output.bones.size():
		#output.weights[mh_id] = normalize_weights_array(output.weights[mh_id])	
	Utils.save_json(\"res://experimental/build_skeleton/bone_weights.json\",output)

#func normalize_weights_array(array:Array):
	#var multiplier : float = 0
	#for weight in array:
		#multiplier += weight
	##print(multiplier)
	#multiplier = 1 / multiplier
	#for i in array.size():
		#array[i] *= multiplier
	#return array

func load_bone_weights():
	var in_weights:Dictionary = Utils.read_json(\"res://addons/humanizer/data/assets/rigs/mixamo/weights.mixamo.json\")
	in_weights = in_weights.weights
	for in_name:String in in_weights.keys():
		var out_name = in_name.replace(\":\",\"_\")
		in_weights[out_name] = in_weights[in_name]
		in_weights.erase(in_name)
	return in_weights
"

[node name="load_bone_weights" type="Node3D"]
script = SubResource("GDScript_5kh8w")
