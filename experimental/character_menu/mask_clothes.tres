[gd_resource type="ShaderMaterial" load_steps=5 format=3 uid="uid://deg4ijl8vvrvm"]

[ext_resource type="Texture2D" uid="uid://bmjl6518t5q12" path="res://addons/humanizer/data/assets/skins/middleage_african_female/middleage_african_female_diffuse.png" id="1_52sxj"]
[ext_resource type="Texture2D" uid="uid://bitxddq1pqe76" path="res://addons/humanizer/data/assets/skins/middleage_asian_female/middleage_asian_female_diffuse2.png" id="2_5lfy2"]

[sub_resource type="Shader" id="Shader_l1ynf"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D texture_mask;
uniform vec4 albedo : source_color;
uniform sampler2D texture_light : source_color,filter_linear_mipmap,repeat_enable;
uniform sampler2D texture_dark : source_color,filter_linear_mipmap,repeat_enable;
uniform float percent_light : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 light_tex = texture(texture_light,base_uv);
	vec4 dark_tex = texture(texture_dark,base_uv);
	ALBEDO = albedo.rgb * (light_tex.rgb*percent_light + dark_tex.rgb*(1.0-percent_light));
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	
	vec4 mask_tex = texture(texture_mask,base_uv);
	ALPHA = mask_tex.r;
	
}
"

[sub_resource type="ViewportTexture" id="ViewportTexture_cwo16"]
viewport_path = NodePath("Human/Mask_Viewport")

[resource]
render_priority = 0
shader = SubResource("Shader_l1ynf")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/percent_light = 1.0
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_mask = SubResource("ViewportTexture_cwo16")
shader_parameter/texture_light = ExtResource("2_5lfy2")
shader_parameter/texture_dark = ExtResource("1_52sxj")
